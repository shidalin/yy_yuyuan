/***************************************************************\
 *     The skeleton of this class is generated by an automatic *
 * code generator for NC product.                              *
\***************************************************************/

package nc.vo.bd.b08;

import java.util.ArrayList;

import nc.vo.pub.CircularlyAccessibleValueObject;
import nc.vo.pub.NullFieldException;
import nc.vo.pub.SuperVO;
import nc.vo.pub.ValidationException;
import nc.vo.pub.lang.UFBoolean;
import nc.vo.pub.lang.UFDateTime;
import nc.vo.pub.lang.UFDouble;

/**
 * 客商基本档案表头VO.
 * <p>
 * <strong>提供者：</strong>UAP
 * <p>
 * <strong>使用者：</strong>
 * <p>
 * <strong>设计状态：</strong>详细设计 
 * <p>
 * @version 	UAP5_1.0
 * @author 		gss
 * @date 2006-9-29
 */
public class CustBasVO extends SuperVO {

    /** serialVersionUID */
    private static final long serialVersionUID = -5466556221953336348L;
    /** 客商属性名称 */
    public String custprop_name;
	/** 经济类型名称 */
	public String ecotype_name;
	/** 呼机1 */
	public String m_bp1;
	/** 呼机2 */
	public String m_bp2;
	/** 呼机3 */
	public String m_bp3;
	/** 通信地址 */
	public String m_conaddr;
	/** 对应结算单位 */
	public String m_correspondunit;
	/** 信用额度 */
	public UFDouble m_creditmny;
	/** 客商编号 */
	public String m_custcode;
	/** 客商名称 */
	public String m_custname;
	/** 客商类型 
	 * 0 - 外部单位;
	 * 1 - 内部核算单位;
	 * 2 - 内部法人单位;
	 * 3 - 内部渠道成员;
	 */
	public Integer m_custprop;
	/** 客商简称 */
	public String m_custshortname;
	/** 自定义项1 */
	public String m_def1;
	/** 自定义项10 */
	public String m_def10;
	/** 自定义项11 */
	public String m_def11;
	/** 自定义项12 */
	public String m_def12;
	/** 自定义项13 */
	public String m_def13;
	/** 自定义项14 */
	public String m_def14;
	/** 自定义项15 */
	public String m_def15;
	/** 自定义项16 */
	public String m_def16;
	/** 自定义项17 */
	public String m_def17;
	/** 自定义项18 */
	public String m_def18;
	/** 自定义项19 */
	public String m_def19;
	/** 自定义项2 */
	public String m_def2;
	/** 自定义项20 */
	public String m_def20;
	/** 自定义项3 */
	public String m_def3;
	/** 自定义项4 */
	public String m_def4;
	/** 自定义项5 */
	public String m_def5;
	/** 自定义项6 */
	public String m_def6;
	/** 自定义项7 */
	public String m_def7;
	/** 自定义项8 */
	public String m_def8;
	/** 自定义项9 */
	public String m_def9;
	/** 脏位 
	 * 0 - 正常数据;
	 * 1 - 脏数据;
	 */
	public Integer m_dr = new Integer(0);
	/** 是否DRP结点 */
	public UFBoolean m_drpnodeflag;
	/** 经济类型 */
	public String m_ecotypesincevfive;
	/** E-mail地址 */
	public String m_email;
	/** 外文名称 */
	public String m_engname;
	/** 传真1 */
	public String m_fax1;
	/** 传真2 */
	public String m_fax2;
	/** 是否散户 */
	public UFBoolean m_freecustflag;
	/** 是否渠道成员 */
	public UFBoolean m_isconnflag;
	/** 法人 */
	public String m_legalbody;
	/** 联系人1 */
	public String m_linkman1;
	/** 联系人2 */
	public String m_linkman2;
	/** 联系人3 */
	public String m_linkman3;
	/** 备注 */
	public String m_memo;
	/** 助记码 */
	public String m_mnecode;
	/** 手机1 */
	public String m_mobilephone1;
	/** 手机2 */
	public String m_mobilephone2;
	/** 手机3 */
	public String m_mobilephone3;
	/** 电话1 */
	public String m_phone1;
	/** 电话2 */
	public String m_phone2;
	/** 电话3 */
	public String m_phone3;
	/** 地区分类 */
	public String m_pk_areacl;
	/** 公司主键 */
	public String m_pk_corp;
	/** 对应公司主键 */
	public String m_pk_corp1;
	/** 客商基本档案主键 */
	public String m_pk_cubasdoc;
	/** 客商总公司编码 */
	public String m_pk_cubasdoc1;
	/** 客商价格分组 */
	public String m_pk_pricegroup;
	/** 注册资金 */
	public UFDouble m_registerfund;
	/** 营业地址 */
	public String m_saleaddr;
	/** 封存标志 */
	private UFBoolean m_sealflag_b;
	/** 纳税人登记号 */
	public String m_taxpayerid;
	/** 所属行业 */
	public String m_trade;
	/** Web网址 */
	public String m_url;
	/** 邮政编码 */
	public String m_zipcode;
	/**时间戳*/
	public UFDateTime m_ts;
	/**创建人*/
	private String creator;
	/**创建时间*/
	private UFDateTime createtime;
	/**修改人*/
	private String modifier;
	/**修改时间*/
	private UFDateTime modifytime;
	/**默认账户*/
	private String accdefault;
	/**登录公司(计算属性，数据库不保存)*/
	private String loginCorp;
	/**管理档案主键*/
	private String pk_cumandoc;
	
/**
 * 使用主键字段进行初始化的构造子.
 * 创建日期：(2001-8-21)
 */
public CustBasVO() {
	super();
}
	/**
	 * 使用主键进行初始化的构造子.
	 * 创建日期：(2001-8-21)
	 * @param ??fieldNameForMethod?? 主键值
	 */
	public CustBasVO(String newPk_cubasdoc) {
		// 为主键字段赋值:
		m_pk_cubasdoc = newPk_cubasdoc;
	}
/**
 * 根类Object的方法,克隆这个VO对象.
 * 创建日期：(2001-8-21)
 */
public Object clone() {
	// 复制基类内容并创建新的VO对象：
	Object o = null;
	try {
		o = super.clone();
	} catch (Exception e) {}
	CustBasVO cubasdoc = (CustBasVO)o;
	// 你在下面复制本VO对象的所有属性：
	return cubasdoc;
}
	public String getAccdefault() {
			return accdefault;
		}
/* (non-Javadoc)
 * @see nc.vo.pub.CircularlyAccessibleValueObject#getAttributeNames()
 */
public java.lang.String[] getAttributeNames() {

	return new String[]{ "pk_corp", "custcode", "custname", "custshortname", "engname", "mnecode", "trade", "correspondunit", "freecustflag", "drpnodeflag", "isconnflag", "pk_cubasdoc1", "custprop", "pk_areacl", "pk_corp1", "taxpayerid", "legalbody", "creditmny", "ecotypesincevfive", "saleaddr", "conaddr", "zipcode", "phone1", "phone2", "phone3", "fax1", "fax2", "linkman1", "linkman2", "linkman3", "bp1", "bp2", "bp3", "mobilephone1", "mobilephone2", "mobilephone3", "email", "url", "def1", "def2", "def3", "def4", "def5", "def6", "def7", "def8", "def9", "def10", "def11", "def12", "def13", "def14", "def15", "def16", "def17", "def18", "def19", "def20", "memo","registerfund","pk_pricegroup","sealflag_b","dr","ts", "accdefault" };
}
/* (non-Javadoc)
 * @see nc.vo.pub.CircularlyAccessibleValueObject#getAttributeValue(java.lang.String)
 */
public Object getAttributeValue(String attributeName)
{
	if (attributeName.equals("pk_cubasdoc"))
	{
		return m_pk_cubasdoc;
	}
	else if (attributeName.equals("pk_corp"))
	{
		return m_pk_corp;
	}
	else if (attributeName.equals("custcode"))
	{
		return m_custcode;
	}
	else if (attributeName.equals("custname"))
	{
		return m_custname;
	}
	else if (attributeName.equals("custshortname"))
	{
		return m_custshortname;
	}
	else if (attributeName.equals("engname"))
	{
		return m_engname;
	}
	else if (attributeName.equals("mnecode"))
	{
		return m_mnecode;
	}
	else if (attributeName.equals("trade"))
	{
		return m_trade;
	}
	else if (attributeName.equals("freecustflag"))
	{
		return m_freecustflag;
	}
	else if (attributeName.equals("drpnodeflag"))
	{
		return m_drpnodeflag;
	}
	else if (attributeName.equals("isconnflag"))
	{
		return m_isconnflag;
	}
	else if (attributeName.equals("pk_cubasdoc1"))
	{
		return m_pk_cubasdoc1;
	}
	else if (attributeName.equals("custprop"))
	{
		return m_custprop;
	}
	else if (attributeName.equals("pk_areacl"))
	{
		return m_pk_areacl;
	}
	else if (attributeName.equals("pk_corp1"))
	{
		return m_pk_corp1;
	}
	else if (attributeName.equals("taxpayerid"))
	{
		return m_taxpayerid;
	}
	else if (attributeName.equals("legalbody"))
	{
		return m_legalbody;
	}
	else if (attributeName.equals("creditmny"))
	{
		return m_creditmny;
	}
	else if (attributeName.equals("ecotypesincevfive"))
	{
		return m_ecotypesincevfive;
	}
	else if (attributeName.equals("saleaddr"))
	{
		return m_saleaddr;
	}
	else if (attributeName.equals("conaddr"))
	{
		return m_conaddr;
	}
	else if (attributeName.equals("zipcode"))
	{
		return m_zipcode;
	}
	else if (attributeName.equals("phone1"))
	{
		return m_phone1;
	}
	else if (attributeName.equals("phone2"))
	{
		return m_phone2;
	}
	else if (attributeName.equals("phone3"))
	{
		return m_phone3;
	}
	else if (attributeName.equals("fax1"))
	{
		return m_fax1;
	}
	else if (attributeName.equals("fax2"))
	{
		return m_fax2;
	}
	else if (attributeName.equals("linkman1"))
	{
		return m_linkman1;
	}
	else if (attributeName.equals("linkman2"))
	{
		return m_linkman2;
	}
	else if (attributeName.equals("linkman3"))
	{
		return m_linkman3;
	}
	else if (attributeName.equals("bp1"))
	{
		return m_bp1;
	}
	else if (attributeName.equals("bp2"))
	{
		return m_bp2;
	}
	else if (attributeName.equals("bp3"))
	{
		return m_bp3;
	}
	else if (attributeName.equals("mobilephone1"))
	{
		return m_mobilephone1;
	}
	else if (attributeName.equals("mobilephone2"))
	{
		return m_mobilephone2;
	}
	else if (attributeName.equals("mobilephone3"))
	{
		return m_mobilephone3;
	}
	else if (attributeName.equals("email"))
	{
		return m_email;
	}
	else if (attributeName.equals("url"))
	{
		return m_url;
	}
	else if (attributeName.equals("def1") || attributeName.equals("b_def1"))
	{
		return m_def1;
	}
	else if (attributeName.equals("def2") || attributeName.equals("b_def2"))
	{
		return m_def2;
	}
	else if (attributeName.equals("def3") || attributeName.equals("b_def3"))
	{
		return m_def3;
	}
	else if (attributeName.equals("def4") || attributeName.equals("b_def4"))
	{
		return m_def4;
	}
	else if (attributeName.equals("def5") || attributeName.equals("b_def5"))
	{
		return m_def5;
	}
	else if (attributeName.equals("def6") || attributeName.equals("b_def6"))
	{
		return m_def6;
	}
	else if (attributeName.equals("def7") || attributeName.equals("b_def7"))
	{
		return m_def7;
	}
	else if (attributeName.equals("def8") || attributeName.equals("b_def8"))
	{
		return m_def8;
	}
	else if (attributeName.equals("def9") || attributeName.equals("b_def9"))
	{
		return m_def9;
	}
	else if (attributeName.equals("def10") || attributeName.equals("b_def10"))
	{
		return m_def10;
	}
	else if (attributeName.equals("def11") || attributeName.equals("b_def11"))
	{
		return m_def11;
	}
	else if (attributeName.equals("def12") || attributeName.equals("b_def12"))
	{
		return m_def12;
	}
	else if (attributeName.equals("def13") || attributeName.equals("b_def13"))
	{
		return m_def13;
	}
	else if (attributeName.equals("def14") || attributeName.equals("b_def14"))
	{
		return m_def14;
	}
	else if (attributeName.equals("def15") || attributeName.equals("b_def15"))
	{
		return m_def15;
	}
	else if (attributeName.equals("def16") || attributeName.equals("b_def16"))
	{
		return m_def16;
	}
	else if (attributeName.equals("def17") || attributeName.equals("b_def17"))
	{
		return m_def17;
	}
	else if (attributeName.equals("def18") || attributeName.equals("b_def18"))
	{
		return m_def18;
	}
	else if (attributeName.equals("def19") || attributeName.equals("b_def19"))
	{
		return m_def19;
	}
	else if (attributeName.equals("def20") || attributeName.equals("b_def20"))
	{
		return m_def20;
	}
	else if (attributeName.equals("memo"))
	{
		return m_memo;
	}
	else if (attributeName.equals("registerfund"))
	{
		return m_registerfund;
	}
	// For display
	else if (attributeName.equals("custflag_name"))
	{
		return custprop_name;
	}
	else if (attributeName.equals("ecotype_name"))
	{
		return ecotype_name;
	//2004-02-10 add
	}else if (attributeName.equals("pk_pricegroup")){
		return m_pk_pricegroup;
		}
	else if (attributeName.equals("sealflag_b")){
		return m_sealflag_b;
		}
	else if(attributeName.equals("correspondunit"))
		return m_correspondunit;
	else if(attributeName.equals("dr"))
		return m_dr;
	else if(attributeName.equals("ts"))
		return m_ts;
	else if(attributeName.equals("creator")){
		return creator;
	}else if(attributeName.equals("createtime")){
		return createtime;
	}else if(attributeName.equals("modifier")){
		return modifier;
	}else if(attributeName.equals("modifytime")){
		return modifytime;
	} else if(attributeName.equals("accdefault")) {
		return accdefault;
	}
	return null;
}
/**
 * 呼机1Getter.
 * @return
 */
public String getBp1() {
	return m_bp1;
}
/**
 * 呼机2Getter.
 * @return
 */
public String getBp2() {
	return m_bp2;
}
/**
 * 呼机3Getter.
 * @return
 */
public String getBp3() {
	return m_bp3;
}
/**
 * 检查名称重复SQL语句.
 * @param pk_corp
 * @return
 */
public String getCheckNameSql(String pk_corp)
{
	String sql = null;
	//检查名称是否重复
	String code = this.getCustcode();
	String name = this.getCustname();
	boolean forupdate = (this.getPk_cubasdoc() == null || this.getPk_cubasdoc().length() == 0) ? false : true;
	String checkCorp = (pk_corp == null || pk_corp.length() == 0) ? this.getPk_corp() : pk_corp;
	sql = "select pk_cubasdoc,custcode,custname from bd_cubasdoc where (custcode ='" + code.trim() + "'  or custname = '" + name.trim() + "') ";

    if (!"0001".equals(checkCorp))
	{
    	sql += " and (pk_corp = '0001' or (pk_cubasdoc in (select pk_cubasdoc from bd_cumandoc where pk_corp = '" + checkCorp
						+ "'))) ";
	}
	if (forupdate)
	{
		sql += " and pk_cubasdoc <> '" + this.getPk_cubasdoc() + "'";
	}
	return sql;
}
/**
 * 检查交换数据名称重复SQL语句Getter.
 * @param pk_corp
 * @return
 */
public String getCheckNameSqlForExChange(String pk_corp)
{
	String sql = null;
	//检查名称是否重复
	String code = this.getCustcode();
	boolean forupdate = (this.getPk_cubasdoc() == null || this.getPk_cubasdoc().length() == 0) ? false : true;
	String checkCorp = (pk_corp == null || pk_corp.length() == 0) ? this.getPk_corp() : pk_corp;
	sql = "select pk_cubasdoc,custcode from bd_cubasdoc where custcode ='" + code.trim() + "' ";
    if (!"0001".equals(checkCorp))
	{
    	sql += " and (pk_corp = '0001' or (pk_cubasdoc in (select pk_cubasdoc from bd_cumandoc where pk_corp = '" + checkCorp
						+ "'))) ";
	}
	if (forupdate)
	{
		sql += " and pk_cubasdoc <> '" + this.getPk_cubasdoc() + "'";
	}
	return sql;
}
/**
 * 通信地址Getter.
 * @return
 */
public String getConaddr() {
	return m_conaddr;
}
/**
 * 对应结算单位Getter.
 * @return
 */
public String getCorrespondunit() {
	return m_correspondunit;
}
public UFDateTime getCreatetime() {
	return createtime;
}
public String getCreator() {
	return creator;
}
/**
 * 信用额度Getter.
 * @return
 */
public UFDouble getCreditmny() {
	return m_creditmny;
}
/**
 * 客商编号Getter.
 * @return
 */
public String getCustcode() {
	return m_custcode;
}
/**
 * 客商名称Getter.
 * @return
 */
public String getCustname() {
	return m_custname;
}
/**
 * 客商属性Getter.
 * @return
 */
public Integer getCustprop() {
	return m_custprop;
}
/**
 * 客商属性名称Getter.
 * @return
 */
public java.lang.String getCustprop_name() {
	return custprop_name;
}
/**
 * 客商简称Getter.
 * @return
 */
public String getCustshortname() {
	return m_custshortname;
}
/**
 * 自定义项1Getter.
 * @return
 */
public String getDef1() {
	return m_def1;
}
/**
 * 自定义项10Getter.
 * @return
 */
public String getDef10() {
	return m_def10;
}
/**
 * 自定义项11Getter.
 * @return
 */
public String getDef11() {
	return m_def11;
}
/**
 * 自定义项12Getter.
 * @return
 */
public String getDef12() {
	return m_def12;
}
/**
 * 自定义项13Getter.
 * @return
 */
public String getDef13() {
	return m_def13;
}
/**
 * 自定义项14Getter.
 * @return
 */
public String getDef14() {
	return m_def14;
}
/**
 * 自定义项15Getter.
 * @return
 */
public String getDef15() {
	return m_def15;
}
/**
 * 自定义项16Getter.
 * @return
 */
public String getDef16() {
	return m_def16;
}
/**
 * 自定义项17Getter.
 * @return
 */
public String getDef17() {
	return m_def17;
}
/**
 * 自定义项18Getter.
 * @return
 */
public String getDef18() {
	return m_def18;
}
/**
 * 自定义项19Getter.
 * @return
 */
public String getDef19() {
	return m_def19;
}
/**
 * 自定义项2Getter.
 * @return
 */
public String getDef2() {
	return m_def2;
}
/**
 * 自定义项20Getter.
 * @return
 */
public String getDef20() {
	return m_def20;
}
/**
 * 自定义项3Getter.
 * @return
 */
public String getDef3() {
	return m_def3;
}
/**
 * 自定义项4Getter.
 * @return
 */
public String getDef4() {
	return m_def4;
}
/**
 * 自定义项5Getter.
 * @return
 */
public String getDef5() {
	return m_def5;
}
/**
 * 自定义项6Getter.
 * @return
 */
public String getDef6() {
	return m_def6;
}
/**
 * 自定义项7Getter.
 * @return
 */
public String getDef7() {
	return m_def7;
}
/**
 * 自定义项8Getter.
 * @return
 */
public String getDef8() {
	return m_def8;
}
/**
 * 自定义项9Getter.
 * @return
 */
public String getDef9() {
	return m_def9;
}
/**
 * 脏位Getter.
 * @return
 */
public Integer getDr() {
	return m_dr;
}
/**
 * 是否DRP结点Getter.
 * @return
 */
public UFBoolean getDrpnodeflag() {
	return m_drpnodeflag;
}
/**
 * 经济类型Getter.
 * @return
 */
public String getEcotype() {
	return m_ecotypesincevfive;
}
/**
 * 经济类型名称Getter.
 * @return
 */
public java.lang.String getEcotype_name() {
	return ecotype_name;
}
/**
 * 经济类型Getter.
 * @return
 */
public String getEcotypesincevfive() {
	return m_ecotypesincevfive;
}
/**
 * E-mail地址Getter.
 * @return
 */
public String getEmail() {
	return m_email;
}
/**
 * 外文名称Getter.
 * @return
 */
public String getEngname() {
	return m_engname;
}
/* (non-Javadoc)
 * @see nc.vo.pub.ValueObject#getEntityName()
 */
public String getEntityName() {
	return "Cubasdoc";
}
/**
 * 传真1Getter.
 * @return
 */
public String getFax1() {
	return m_fax1;
}
/**
 * 传真2Getter.
 * @return
 */
public String getFax2() {
	return m_fax2;
}
/**
 * 是否散户Getter.
 * @return
 */
public UFBoolean getFreecustflag() {
	return m_freecustflag;
}
/**
 * 是否渠道成员Getter.
 * @return
 */
public UFBoolean getIsconnflag() {
	return m_isconnflag;
}
/**
 * 法人Getter.
 * @return
 */
public String getLegalbody() {
	return m_legalbody;
}
/**
 * 联系人1Getter.
 * @return
 */
public String getLinkman1() {
	return m_linkman1;
}
/**
 * 联系人2Getter.
 * @return
 */
public String getLinkman2() {
	return m_linkman2;
}
/**
 * 联系人3Getter.
 * @return
 */
public String getLinkman3() {
	return m_linkman3;
}
public String getLoginCorp() {
		return loginCorp;
	}
/**
 * 备注Getter.
 * @return
 */
public String getMemo() {
	return m_memo;
}
/**
 * 助记码Getter.
 * @return
 */
public String getMnecode() {
	return m_mnecode;
}
/**
 * 手机1Getter.
 * @return
 */
public String getMobilephone1() {
	return m_mobilephone1;
}
/**
 * 手机2Getter.
 * @return
 */
public String getMobilephone2() {
	return m_mobilephone2;
}
/**
 * 手机3Getter.
 * @return
 */
public String getMobilephone3() {
	return m_mobilephone3;
}
public String getModifier() {
	return modifier;
}
public UFDateTime getModifytime() {
	return modifytime;
}
/**
 * 电话1Getter.
 * @return
 */
public String getPhone1() {
	return m_phone1;
}
/**
 * 电话2Getter.
 * @return
 */
public String getPhone2() {
	return m_phone2;
}
/**
 * 电话3Getter.
 * @return
 */
public String getPhone3() {
	return m_phone3;
}
/**
 * 地区分类Getter.
 * @return
 */
public String getPk_areacl() {
	return m_pk_areacl;
}
/**
 * 公司主键Getter.
 * @return
 */
public String getPk_corp() {
	return m_pk_corp;
}
/**
 * 对应公司主键Getter.
 * @return
 */
public String getPk_corp1() {
	return m_pk_corp1;
}
/**
 * 客商基本档案主键Getter.
 * @return
 */
public String getPk_cubasdoc() {
	return m_pk_cubasdoc;
}
/**
 * 客商总公司编码Getter.
 * @return
 */
public String getPk_cubasdoc1() {
	return m_pk_cubasdoc1;
}
/**
 * 客商价格分组Getter.
 * @return
 */
public java.lang.String getpk_pricegroup() {
	return m_pk_pricegroup;
}

public java.lang.String getPk_pricegroup() {
	return m_pk_pricegroup;
}
/* (non-Javadoc)
 * @see nc.vo.pub.ValueObject#getPrimaryKey()
 */
public String getPrimaryKey() {
	return m_pk_cubasdoc;
}
/**
 * 注册资金Getter.
 * @return
 */
public UFDouble getRegisterfund() {
	return m_registerfund;
}
/**
 * 营业地址Getter.
 * @return
 */
public String getSaleaddr() {
	return m_saleaddr;
}
/**
 * 纳税人登记号Getter.
 * @return
 */
public String getTaxpayerid() {
	return m_taxpayerid;
}
/**
 * 所属行业Getter.
 * @return
 */
public String getTrade() {
	return m_trade;
}
public UFDateTime getTs() {
	return m_ts;
}
/**
 * Web网址Getter.
 * @return
 */
public String getUrl() {
	return m_url;
}
/**
 * 邮政编码Getter.
 * @return
 */
public String getZipcode() {
	return m_zipcode;
}
public void setAccdefault(String accdefault) {
	this.accdefault = accdefault;
}
/* (non-Javadoc)
 * @see nc.vo.pub.CircularlyAccessibleValueObject#setAttributeValue(java.lang.String, java.lang.Object)
 */
public void setAttributeValue(String name, Object value) {
	try {
		if (name.equals("pk_cubasdoc")) {
			m_pk_cubasdoc = (String) value;
		} else if (name.equals("pk_corp")) {
			m_pk_corp = (String) value;
		} else if (name.equals("custcode")) {
			m_custcode = (String) value;
		} else if (name.equals("custname")) {
			m_custname = (String) value;
		} else if (name.equals("custshortname")) {
			m_custshortname = (String) value;
		} else if (name.equals("engname")) {
			m_engname = (String) value;
		} else if (name.equals("mnecode")) {
			m_mnecode = (String) value;
		} else if (name.equals("trade")) {
			m_trade = (String) value;
		} else if (name.equals("freecustflag")) {
			m_freecustflag = (UFBoolean) value;
		} else if (name.equals("drpnodeflag")) {
			m_drpnodeflag = (UFBoolean) value;
		} else if (name.equals("isconnflag")) {
			m_isconnflag = (UFBoolean) value;
		} else if (name.equals("pk_cubasdoc1")) {
			m_pk_cubasdoc1 = (String) value;
		} else if (name.equals("custprop")) {
			m_custprop = (Integer) value;
		} else if (name.equals("pk_areacl")) {
			m_pk_areacl = (String) value;
		} else if (name.equals("pk_corp1")) {
			m_pk_corp1 = (String) value;
		} else if (name.equals("taxpayerid")) {
			m_taxpayerid = (String) value;
		} else if (name.equals("legalbody")) {
			m_legalbody = (String) value;
		} else if (name.equals("creditmny")) {
			m_creditmny = (UFDouble) value;
		} else if (name.equals("ecotypesincevfive")) {
			m_ecotypesincevfive = (String) value;
		} else if (name.equals("saleaddr")) {
			m_saleaddr = (String) value;
		} else if (name.equals("conaddr")) {
			m_conaddr = (String) value;
		} else if (name.equals("zipcode")) {
			m_zipcode = (String) value;
		} else if (name.equals("phone1")) {
			m_phone1 = (String) value;
		} else if (name.equals("phone2")) {
			m_phone2 = (String) value;
		} else if (name.equals("phone3")) {
			m_phone3 = (String) value;
		} else if (name.equals("fax1")) {
			m_fax1 = (String) value;
		} else if (name.equals("fax2")) {
			m_fax2 = (String) value;
		} else if (name.equals("linkman1")) {
			m_linkman1 = (String) value;
		} else if (name.equals("linkman2")) {
			m_linkman2 = (String) value;
		} else if (name.equals("linkman3")) {
			m_linkman3 = (String) value;
		} else if (name.equals("bp1")) {
			m_bp1 = (String) value;
		} else if (name.equals("bp2")) {
			m_bp2 = (String) value;
		} else if (name.equals("bp3")) {
			m_bp3 = (String) value;
		} else if (name.equals("mobilephone1")) {
			m_mobilephone1 = (String) value;
		} else if (name.equals("mobilephone2")) {
			m_mobilephone2 = (String) value;
		} else if (name.equals("mobilephone3")) {
			m_mobilephone3 = (String) value;
		} else if (name.equals("email")) {
			m_email = (String) value;
		} else if (name.equals("url")) {
			m_url = (String) value;
		} else if (name.equals("def1") || name.equals("b_def1")) {
			m_def1 = value == null ? null : value.toString();
		} else if (name.equals("def2") || name.equals("b_def2")) {
			m_def2 = value == null ? null : value.toString();
		} else if (name.equals("def3") || name.equals("b_def3")) {
			m_def3 = value == null ? null : value.toString();
		} else if (name.equals("def4") || name.equals("b_def4")) {
			m_def4 = value == null ? null : value.toString();
		} else if (name.equals("def5") || name.equals("b_def5")) {
			m_def5 = value == null ? null : value.toString();
		} else if (name.equals("def6") || name.equals("b_def6")) {
			m_def6 = value == null ? null : value.toString();
		} else if (name.equals("def7") || name.equals("b_def7")) {
			m_def7 = value == null ? null : value.toString();
		} else if (name.equals("def8") || name.equals("b_def8")) {
			m_def8 = value == null ? null : value.toString();
		} else if (name.equals("def9") || name.equals("b_def9")) {
			m_def9 = value == null ? null : value.toString();
		} else if (name.equals("def10") || name.equals("b_def10")) {
			m_def10 = value == null ? null : value.toString();
		} else if (name.equals("def11") || name.equals("b_def11")) {
			m_def11 = value == null ? null : value.toString();
		} else if (name.equals("def12") || name.equals("b_def12")) {
			m_def12 = value == null ? null : value.toString();
		} else if (name.equals("def13") || name.equals("b_def13")) {
			m_def13 = value == null ? null : value.toString();
		} else if (name.equals("def14") || name.equals("b_def14")) {
			m_def14 = value == null ? null : value.toString();
		} else if (name.equals("def15") || name.equals("b_def15")) {
			m_def15 = value == null ? null : value.toString();
		} else if (name.equals("def16") || name.equals("b_def16")) {
			m_def16 = value == null ? null : value.toString();
		} else if (name.equals("def17") || name.equals("b_def17")) {
			m_def17 = value == null ? null : value.toString();
		} else if (name.equals("def18") || name.equals("b_def18")) {
			m_def18 = value == null ? null : value.toString();
		} else if (name.equals("def19") || name.equals("b_def19")) {
			m_def19 = value == null ? null : value.toString();
		} else if (name.equals("def20") || name.equals("b_def20")) {
			m_def20 = value == null ? null : value.toString();
		} else if (name.equals("memo")) {
			m_memo = (String) value;
		} else if (name.equals("registerfund")) {
			m_registerfund = (UFDouble) value;
		}else if (name.equals("pk_pricegroup")) {
			m_pk_pricegroup = (String)value;
		}else if (name.equals("sealflag_b")) {
			m_sealflag_b = (UFBoolean) value;
		}else if(name.equals("correspondunit"))
			m_correspondunit = (String)value;
		 else if(name.equals("creator")){
			 creator=(String)value;
		}else if(name.equals("createtime")){
			if(value instanceof String){
				createtime=value==null?null:new UFDateTime((String)value);
			}else{
				createtime= (UFDateTime)value;
			}
		}else if(name.equals("modifier")){
			 modifier= (String)value;
		}else if(name.equals("modifytime")){
			if(value instanceof String){
				modifytime=value==null?null:new UFDateTime((String)value);
			}else{
				modifytime= (UFDateTime)value;
			}
		}
		else if(name.equals("dr"))
			m_dr = (Integer)value;
		else if(name.equals("ts"))
			m_ts = (UFDateTime)value;
		else if(name.equals("accdefault")) {
			accdefault = (String) value;
		}
	} catch (ClassCastException e) {
		throw new ClassCastException("ClassCastException: AttributeName is " + name);
	}
}
/**
 * 呼机1Setter.
 * @param newBp1
 */
public void setBp1(String newBp1) {
	m_bp1 = newBp1;
}
/**
 * 呼机2Setter.
 * @param newBp2
 */
public void setBp2(String newBp2) {
	m_bp2 = newBp2;
}
/**
 * 呼机3Setter.
 * @param newBp3
 */
public void setBp3(String newBp3) {
	m_bp3 = newBp3;
}


public String getPk_cumandoc() {
	return pk_cumandoc;
}
public void setPk_cumandoc(String pk_cumandoc) {
	this.pk_cumandoc = pk_cumandoc;
}
/**
 * 通信地址Setter.
 * @param newConaddr
 */
public void setConaddr(String newConaddr) {
	m_conaddr = newConaddr;
}
/**
 * 通信地址Setter.
 * @param m_correspondunit
 */
public void setCorrespondunit(String m_correspondunit) {
	this.m_correspondunit = m_correspondunit;
}
public void setCreatetime(UFDateTime createtime) {
	this.createtime = createtime;
}
public void setCreator(String creator) {
	this.creator = creator;
}
/**
 * 信用额度Setter.
 * @param newCreditmny
 */
public void setCreditmny(UFDouble newCreditmny) {
	m_creditmny = newCreditmny;
}
/**
 * 客商编号Setter.
 * @param newCustcode
 */
public void setCustcode(String newCustcode) {
	m_custcode = newCustcode;
}
/**
 * 客商名称Setter.
 * @param newCustname
 */
public void setCustname(String newCustname) {
	m_custname = newCustname;
}
/**
 * 客商属性Setter.
 * @param newCustprop
 */
public void setCustprop(Integer newCustprop)
{
	int prop = newCustprop == null ? 0 : newCustprop.intValue();
	switch (prop)
	{
		case 0 :
			setCustprop_name(nc.vo.ml.NCLangRes4VoTransl.getNCLangRes().getStrByID("10080804","UPP10080804-000028")/*@res "外部单位"*/);
			break;
		case 1 :
			setCustprop_name(nc.vo.ml.NCLangRes4VoTransl.getNCLangRes().getStrByID("10080804","UPP10080804-000034")/*@res "内部核算单位"*/);
			break;
		case 2 :
			setCustprop_name(nc.vo.ml.NCLangRes4VoTransl.getNCLangRes().getStrByID("10080804","UPP10080804-000035")/*@res "内部法人单位"*/);
			break;
		case 3 :
			setCustprop_name(nc.vo.ml.NCLangRes4VoTransl.getNCLangRes().getStrByID("10080804","UPP10080804-000036")/*@res "内部渠道成员"*/);
			break;
	}
	m_custprop = newCustprop;
}
/**
 * 客商属性名称Setter.
 * @param newCustprop_name
 */
public void setCustprop_name(java.lang.String newCustprop_name) {
	custprop_name = newCustprop_name;
}
/**
 * 客商简称Setter.
 * @param newCustshortname
 */
public void setCustshortname(String newCustshortname) {
	m_custshortname = newCustshortname;
}
/**
 * 自定义项1Setter.
 * @param newDef1
 */
public void setDef1(String newDef1) {
	m_def1 = newDef1;
}
/**
 * 自定义项10Setter.
 * @param newDef10
 */
public void setDef10(String newDef10) {
	m_def10 = newDef10;
}
/**
 * 自定义项11Setter.
 * @param newDef11
 */
public void setDef11(String newDef11) {
	m_def11 = newDef11;
}
/**
 * 自定义项12Setter.
 * @param newDef12
 */
public void setDef12(String newDef12) {
	m_def12 = newDef12;
}
/**
 * 自定义项13Setter.
 * @param newDef13
 */
public void setDef13(String newDef13) {
	m_def13 = newDef13;
}
/**
 * 自定义项14Setter.
 * @param newDef14
 */
public void setDef14(String newDef14) {
	m_def14 = newDef14;
}
/**
 * 自定义项15Setter.
 * @param newDef15
 */
public void setDef15(String newDef15) {
	m_def15 = newDef15;
}
/**
 * 自定义项16Setter.
 * @param newDef16
 */
public void setDef16(String newDef16) {
	m_def16 = newDef16;
}
/**
 * 自定义项17Setter.
 * @param newDef17
 */
public void setDef17(String newDef17) {
	m_def17 = newDef17;
}
/**
 * 自定义项18Setter.
 * @param newDef18
 */
public void setDef18(String newDef18) {
	m_def18 = newDef18;
}
/**
 * 自定义项19Setter.
 * @param newDef19
 */
public void setDef19(String newDef19) {
	m_def19 = newDef19;
}
/**
 * 自定义项2Setter.
 * @param newDef2
 */
public void setDef2(String newDef2) {
	m_def2 = newDef2;
}
/**
 * 自定义项20Setter.
 * @param newDef20
 */
public void setDef20(String newDef20) {
	m_def20 = newDef20;
}
/**
 * 自定义项3Setter.
 * @param newDef3
 */
public void setDef3(String newDef3) {
	m_def3 = newDef3;
}
/**
 * 自定义项4Setter.
 * @param newDef4
 */
public void setDef4(String newDef4) {
	m_def4 = newDef4;
}
/**
 * 自定义项5Setter.
 * @param newDef5
 */
public void setDef5(String newDef5) {
	m_def5 = newDef5;
}
/**
 * 自定义项6Setter.
 * @param newDef6
 */
public void setDef6(String newDef6) {
	m_def6 = newDef6;
}
/**
 * 自定义项7Setter.
 * @param newDef7
 */
public void setDef7(String newDef7) {
	m_def7 = newDef7;
}
/**
 * 自定义项8Setter.
 * @param newDef8
 */
public void setDef8(String newDef8) {
	m_def8 = newDef8;
}
/**
 * 自定义项9Setter.
 * @param newDef9
 */
public void setDef9(String newDef9) {
	m_def9 = newDef9;
}
/**
 * 脏位Setter.
 * @param dr
 */
public void setDr(Integer dr) {
	this.m_dr = dr;
}
/**
 * 是否DRP结点Setter.
 * @param newDrpnodeflag
 */
public void setDrpnodeflag(UFBoolean newDrpnodeflag) {
	m_drpnodeflag = newDrpnodeflag;
}
/**
 * 经济类型Setter.
 * @param newEcotype
 */
public void setEcotype(String newEcotype)
{
	m_ecotypesincevfive = newEcotype;
}
/**
 * 经济类型名称Setter.
 * @param newEcotype_name
 */
public void setEcotype_name(java.lang.String newEcotype_name) {
	ecotype_name = newEcotype_name;
}
/**
 * 经济类型Setter.
 * @param m_ecotypesincevfive
 */
public void setEcotypesincevfive(String m_ecotypesincevfive) {
	this.m_ecotypesincevfive = m_ecotypesincevfive;
}
/**
 * E-mail地址Setter.
 * @param newEmail
 */
public void setEmail(String newEmail) {
	m_email = newEmail;
}
/**
 * 外文名称Setter.
 * @param newEngname
 */
public void setEngname(String newEngname) {
	m_engname = newEngname;
}
/**
 * 传真1Setter.
 * @param newFax1
 */
public void setFax1(String newFax1) {
	m_fax1 = newFax1;
}
/**
 * 传真2Setter.
 * @param newFax2
 */
public void setFax2(String newFax2) {
	m_fax2 = newFax2;
}
/**
 * 是否散户Setter.
 * @param newFreecustflag
 */
public void setFreecustflag(UFBoolean newFreecustflag) {
	m_freecustflag = newFreecustflag;
}
/**
 * 是否渠道成员Setter.
 * @param newIsconnflag
 */
public void setIsconnflag(UFBoolean newIsconnflag) {
	m_isconnflag = newIsconnflag;
}
/**
 * 法人Setter.
 * @param newLegalbody
 */
public void setLegalbody(String newLegalbody) {
	m_legalbody = newLegalbody;
}
/**
 * 联系人1Setter.
 * @param newLinkman1
 */
public void setLinkman1(String newLinkman1) {
	m_linkman1 = newLinkman1;
}
/**
 * 联系人2Setter.
 * @param newLinkman2
 */
public void setLinkman2(String newLinkman2) {
	m_linkman2 = newLinkman2;
}
/**
 * 联系人3Setter.
 * @param newLinkman3
 */
public void setLinkman3(String newLinkman3) {
	m_linkman3 = newLinkman3;
}
public void setLoginCorp(String loginCorp) {
	this.loginCorp = loginCorp;
}
/**
 * 备注Setter.
 * @param newMemo
 */
public void setMemo(String newMemo) {
	m_memo = newMemo;
}
/**
 * 助记码Setter.
 * @param newMnecode
 */
public void setMnecode(String newMnecode) {
	m_mnecode = newMnecode;
}
/**
 * 手机1Setter.
 * @param newMobilephone1
 */
public void setMobilephone1(String newMobilephone1) {
	m_mobilephone1 = newMobilephone1;
}
/**
 * 手机2Setter.
 * @param newMobilephone2
 */
public void setMobilephone2(String newMobilephone2) {
	m_mobilephone2 = newMobilephone2;
}
/**
 * 手机3Setter.
 * @param newMobilephone3
 */
public void setMobilephone3(String newMobilephone3) {
	m_mobilephone3 = newMobilephone3;
}
public void setModifier(String modifier) {
	this.modifier = modifier;
}
public void setModifytime(UFDateTime modifytime) {
	this.modifytime = modifytime;
}
/**
 * 电话1Setter.
 * @param newPhone1
 */
public void setPhone1(String newPhone1) {
	m_phone1 = newPhone1;
}
/**
 * 电话2Setter.
 * @param newPhone2
 */
public void setPhone2(String newPhone2) {
	m_phone2 = newPhone2;
}
/**
 * 电话3Setter.
 * @param newPhone3
 */
public void setPhone3(String newPhone3) {
	m_phone3 = newPhone3;
}
/**
 * 地区分类Setter.
 * @param newPk_areacl
 */
public void setPk_areacl(String newPk_areacl) {
	m_pk_areacl = newPk_areacl;
}
/**
 * 公司主键Setter.
 * @param newPk_corp
 */
public void setPk_corp(String newPk_corp) {
	m_pk_corp = newPk_corp;
}
/**
 * 对应公司主键Setter.
 * @param newPk_corp1
 */
public void setPk_corp1(String newPk_corp1) {
	m_pk_corp1 = newPk_corp1;
}

/**
 * 对应公司主键Setter.
 * @param newPk_cubasdoc
 */
public void setPk_cubasdoc(String newPk_cubasdoc) {
	m_pk_cubasdoc = newPk_cubasdoc;
}
/**
 * 客商总公司编码Setter.
 * @param newPk_cubasdoc1
 */
public void setPk_cubasdoc1(String newPk_cubasdoc1) {
	m_pk_cubasdoc1 = newPk_cubasdoc1;
}
/**
 * 客商价格分组Setter.
 * @param newM_pk_pricegroup
 */
public void setpk_pricegroup(java.lang.String newM_pk_pricegroup) {
	m_pk_pricegroup = newM_pk_pricegroup;
}
public void setPk_pricegroup(java.lang.String newM_pk_pricegroup) {
	m_pk_pricegroup = newM_pk_pricegroup;
}
/* (non-Javadoc)
 * @see nc.vo.pub.ValueObject#setPrimaryKey(java.lang.String)
 */
public void setPrimaryKey(String newPk_cubasdoc) {
	m_pk_cubasdoc = newPk_cubasdoc;
}
/**
 * 注册资金Setter.
 * @param newRegisterfund
 */
public void setRegisterfund(UFDouble newRegisterfund) {
	m_registerfund = newRegisterfund;
}
/**
 * 营业地址Setter.
 * @param newSaleaddr
 */
public void setSaleaddr(String newSaleaddr) {
	m_saleaddr = newSaleaddr;
}
/**
 * 纳税人登记号Setter.
 * @param newTaxpayerid
 */
public void setTaxpayerid(String newTaxpayerid) {
	m_taxpayerid = newTaxpayerid;
}
/**
 * 所属行业Setter.
 * @param newTrade
 */
public void setTrade(String newTrade) {
	m_trade = newTrade;
}
public void setTs(UFDateTime ts) {
	this.m_ts = ts;
}
/**
 * Web网址Setter.
 * @param newUrl
 */
public void setUrl(String newUrl) {
	m_url = newUrl;
}
/**
 * 邮政编码Setter.
 * @param newZipcode
 */
public void setZipcode(String newZipcode) {
	m_zipcode = newZipcode;
}


/* (non-Javadoc)
 * @see nc.vo.pub.ValueObject#validate()
 */
public void validate() throws ValidationException {
	ArrayList<String> errFields = new ArrayList<String>();
	if (m_custcode == null || m_custcode.length() == 0)
	{
		errFields.add(new String(nc.vo.ml.NCLangRes4VoTransl.getNCLangRes().getStrByID("10080804","UPP10080804-000057")/*@res "客商信息-客商编号"*/));
	}
	if (m_custname == null || m_custname.length() == 0)
	{
		errFields.add(new String(nc.vo.ml.NCLangRes4VoTransl.getNCLangRes().getStrByID("10080804","UPP10080804-000058")/*@res "客商信息-客商名称"*/));
	}
	if (m_custshortname == null || m_custshortname.length() == 0)
	{
		errFields.add(new String(nc.vo.ml.NCLangRes4VoTransl.getNCLangRes().getStrByID("10080804","UPP10080804-000059")/*@res "客商信息-客商简称"*/));
	}if (m_custprop.intValue() > 0 && m_pk_corp1 == null)
	{
		errFields.add(new String(nc.vo.ml.NCLangRes4VoTransl.getNCLangRes().getStrByID("10080804","UPP10080804-000061")/*@res "客商信息-对应公司编码"*/));
	}if (m_pk_areacl == null || m_pk_areacl.length() == 0)
	{
		errFields.add(new String(nc.vo.ml.NCLangRes4VoTransl.getNCLangRes().getStrByID("10080804","UPP10080804-000060")/*@res "客商信息-所属地区"*/));
	}
	// construct the exception message:
	StringBuffer message = new StringBuffer();
	message.append(nc.vo.bd.BDMsg.MSG_NULL_FIELD());
	if (errFields.size() > 0)
	{
		String[] temp = (String[]) errFields.toArray(new String[0]);
		message.append(temp[0]);
		for (int i = 1; i < temp.length; i++)
		{
			message.append(",");
			message.append(temp[i]);
		}
		// throw the exception:
		throw new NullFieldException(message.toString());
	}
}
/**
 * 编辑数据合法性验证.
 * @throws ValidationException
 */
public void validateEdit() throws ValidationException {
	ArrayList<String> errFields = new ArrayList<String>();
	if (m_custcode == null || m_custcode.length() == 0) {
		errFields.add(new String(nc.vo.ml.NCLangRes4VoTransl.getNCLangRes().getStrByID("10080804","UC000-0001587")/*@res "客商编号"*/));
	}
	if (m_custname == null || m_custname.length() == 0) {
		errFields.add(new String(nc.vo.ml.NCLangRes4VoTransl.getNCLangRes().getStrByID("10080804","UC000-0001578")/*@res "客商名称"*/));
	}
	if (m_custshortname == null || m_custshortname.length() == 0) {
		errFields.add(new String(nc.vo.ml.NCLangRes4VoTransl.getNCLangRes().getStrByID("10080804","UC000-0001586")/*@res "客商简称"*/));
	}
	// construct the exception message:
	StringBuffer message = new StringBuffer();
	message.append(nc.vo.bd.BDMsg.MSG_NULL_FIELD());
	if (errFields.size() > 0) {
		String[] temp = (String[]) errFields.toArray(new String[0]);
		message.append(temp[0]);
		for (int i = 1; i < temp.length; i++) {
			message.append(",");
			message.append(temp[i]);
		}
		// throw the exception:
		throw new NullFieldException(message.toString());
	}
}
}